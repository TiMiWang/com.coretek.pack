package com.coretek.pack.model;

import java.util.ArrayList;
import java.util.List;

public class InstallPackExample   extends PageInfo{
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public InstallPackExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNull() {
            addCriterion("person_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNotNull() {
            addCriterion("person_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonIdEqualTo(Integer value) {
            addCriterion("person_id =", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotEqualTo(Integer value) {
            addCriterion("person_id <>", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThan(Integer value) {
            addCriterion("person_id >", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("person_id >=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThan(Integer value) {
            addCriterion("person_id <", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThanOrEqualTo(Integer value) {
            addCriterion("person_id <=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIn(List<Integer> values) {
            addCriterion("person_id in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotIn(List<Integer> values) {
            addCriterion("person_id not in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdBetween(Integer value1, Integer value2) {
            addCriterion("person_id between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotBetween(Integer value1, Integer value2) {
            addCriterion("person_id not between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdIsNull() {
            addCriterion("pack_mode_id is null");
            return (Criteria) this;
        }

        public Criteria andPackModeIdIsNotNull() {
            addCriterion("pack_mode_id is not null");
            return (Criteria) this;
        }

        public Criteria andPackModeIdEqualTo(Integer value) {
            addCriterion("pack_mode_id =", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdNotEqualTo(Integer value) {
            addCriterion("pack_mode_id <>", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdGreaterThan(Integer value) {
            addCriterion("pack_mode_id >", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("pack_mode_id >=", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdLessThan(Integer value) {
            addCriterion("pack_mode_id <", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdLessThanOrEqualTo(Integer value) {
            addCriterion("pack_mode_id <=", value, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdIn(List<Integer> values) {
            addCriterion("pack_mode_id in", values, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdNotIn(List<Integer> values) {
            addCriterion("pack_mode_id not in", values, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdBetween(Integer value1, Integer value2) {
            addCriterion("pack_mode_id between", value1, value2, "packModeId");
            return (Criteria) this;
        }

        public Criteria andPackModeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("pack_mode_id not between", value1, value2, "packModeId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdIsNull() {
            addCriterion("log_info_id is null");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdIsNotNull() {
            addCriterion("log_info_id is not null");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdEqualTo(Integer value) {
            addCriterion("log_info_id =", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdNotEqualTo(Integer value) {
            addCriterion("log_info_id <>", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdGreaterThan(Integer value) {
            addCriterion("log_info_id >", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("log_info_id >=", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdLessThan(Integer value) {
            addCriterion("log_info_id <", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdLessThanOrEqualTo(Integer value) {
            addCriterion("log_info_id <=", value, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdIn(List<Integer> values) {
            addCriterion("log_info_id in", values, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdNotIn(List<Integer> values) {
            addCriterion("log_info_id not in", values, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdBetween(Integer value1, Integer value2) {
            addCriterion("log_info_id between", value1, value2, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andLogInfoIdNotBetween(Integer value1, Integer value2) {
            addCriterion("log_info_id not between", value1, value2, "logInfoId");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathIsNull() {
            addCriterion("install_pack_path is null");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathIsNotNull() {
            addCriterion("install_pack_path is not null");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathEqualTo(String value) {
            addCriterion("install_pack_path =", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathNotEqualTo(String value) {
            addCriterion("install_pack_path <>", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathGreaterThan(String value) {
            addCriterion("install_pack_path >", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathGreaterThanOrEqualTo(String value) {
            addCriterion("install_pack_path >=", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathLessThan(String value) {
            addCriterion("install_pack_path <", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathLessThanOrEqualTo(String value) {
            addCriterion("install_pack_path <=", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathLike(String value) {
            addCriterion("install_pack_path like", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathNotLike(String value) {
            addCriterion("install_pack_path not like", value, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathIn(List<String> values) {
            addCriterion("install_pack_path in", values, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathNotIn(List<String> values) {
            addCriterion("install_pack_path not in", values, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathBetween(String value1, String value2) {
            addCriterion("install_pack_path between", value1, value2, "installPackPath");
            return (Criteria) this;
        }

        public Criteria andInstallPackPathNotBetween(String value1, String value2) {
            addCriterion("install_pack_path not between", value1, value2, "installPackPath");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table install_pack
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table install_pack
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}